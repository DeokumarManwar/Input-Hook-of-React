{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dev\\\\Desktop\\\\React\\\\my-app10\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsValid, setenteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = use;\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (enteredName.trim() === \"\") {\n      setenteredNameIsValid(false);\n      return;\n    }\n\n    setenteredNameIsValid(true);\n    console.log(enteredName);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue); // nameInputRef.current.value = \"\"; // Not the Ideal condition to do we should not manupulate the DOM\n\n    setEnteredName(\"\");\n  };\n\n  const nameInputClasses = enteredNameIsValid ? \"form-control\" : \"form-control invalid\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), !enteredNameIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Name must no be Empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"XyI+lDpXXPPciR/BwDpFdK5ODpQ=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useRef","useState","SimpleInput","props","nameInputRef","enteredName","setEnteredName","enteredNameIsValid","setenteredNameIsValid","enteredNameTouched","setEnteredNameTouched","use","nameInputChangeHandler","event","target","value","formSubmissionHandler","preventDefault","trim","console","log","enteredValue","current","nameInputClasses"],"sources":["C:/Users/Dev/Desktop/React/my-app10/src/components/SimpleInput.js"],"sourcesContent":["import { useRef, useState } from \"react\";\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsValid, setenteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = use;\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    if (enteredName.trim() === \"\") {\n      setenteredNameIsValid(false);\n      return;\n    }\n    setenteredNameIsValid(true);\n\n    console.log(enteredName);\n\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n\n    // nameInputRef.current.value = \"\"; // Not the Ideal condition to do we should not manupulate the DOM\n    setEnteredName(\"\");\n  };\n\n  const nameInputClasses = enteredNameIsValid\n    ? \"form-control\"\n    : \"form-control invalid\";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          ref={nameInputRef}\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputChangeHandler}\n        />\n      </div>\n      {!enteredNameIsValid && (\n        <p className=\"error-text\">Name must no be Empty</p>\n      )}\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;;;AACA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAMC,YAAY,GAAGJ,MAAM,EAA3B;EACA,MAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACM,kBAAD,EAAqBC,qBAArB,IAA8CP,QAAQ,CAAC,KAAD,CAA5D;EACA,MAAM,CAACQ,kBAAD,EAAqBC,qBAArB,IAA8CC,GAApD;;EAEA,MAAMC,sBAAsB,GAAIC,KAAD,IAAW;IACxCP,cAAc,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;EACD,CAFD;;EAIA,MAAMC,qBAAqB,GAAIH,KAAD,IAAW;IACvCA,KAAK,CAACI,cAAN;;IAEA,IAAIZ,WAAW,CAACa,IAAZ,OAAuB,EAA3B,EAA+B;MAC7BV,qBAAqB,CAAC,KAAD,CAArB;MACA;IACD;;IACDA,qBAAqB,CAAC,IAAD,CAArB;IAEAW,OAAO,CAACC,GAAR,CAAYf,WAAZ;IAEA,MAAMgB,YAAY,GAAGjB,YAAY,CAACkB,OAAb,CAAqBP,KAA1C;IACAI,OAAO,CAACC,GAAR,CAAYC,YAAZ,EAZuC,CAcvC;;IACAf,cAAc,CAAC,EAAD,CAAd;EACD,CAhBD;;EAkBA,MAAMiB,gBAAgB,GAAGhB,kBAAkB,GACvC,cADuC,GAEvC,sBAFJ;EAIA,oBACE;IAAM,QAAQ,EAAES,qBAAhB;IAAA,wBACE;MAAK,SAAS,EAAEO,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,GAAG,EAAEnB,YADP;QAEE,IAAI,EAAC,MAFP;QAGE,EAAE,EAAC,MAHL;QAIE,QAAQ,EAAEQ;MAJZ;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAUG,CAACL,kBAAD,iBACC;MAAG,SAAS,EAAC,YAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAXJ,eAaE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAbF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CAnDD;;GAAML,W;;KAAAA,W;AAqDN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}