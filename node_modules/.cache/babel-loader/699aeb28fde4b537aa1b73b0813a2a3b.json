{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dev\\\\Desktop\\\\React\\\\my-app10\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  // const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\"); // const [enteredNameIsValid, setenteredNameIsValid] = useState(false);\n\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [formIsValid, setFormIsValid] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n  const nameEnteredIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      setFormIsValid(true);\n    } else {\n      setFormIsValid(false);\n    }\n  }, [enteredNameIsValid]);\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value); // if (event.target.value.trim() !== \"\") {\n    //   setenteredNameIsValid(true);\n    //   return;\n    // }\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true); // if (enteredName.trim() === \"\") {\n    //   setenteredNameIsValid(false);\n    //   return;\n    // }\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    } // if (enteredName.trim() === \"\") {\n    //   setenteredNameIsValid = false;\n    //   return;\n    // }\n    // setenteredNameIsValid(true);\n\n\n    console.log(enteredName); // const enteredValue = nameInputRef.current.value;\n    // console.log(enteredValue);\n    // nameInputRef.current.value = \"\"; // Not the Ideal condition to do we should not manupulate the DOM\n\n    setEnteredName(\"\");\n    setEnteredNameTouched(false);\n  };\n\n  const nameInputClasses = nameEnteredIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        // ref={nameInputRef}\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), nameEnteredIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Name must no be Empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"5vT777S/ZiJ1o4AjyUtAp2KcXt0=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useRef","useState","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","formIsValid","setFormIsValid","enteredNameIsValid","trim","nameEnteredIsInvalid","useEffect","nameInputChangeHandler","event","target","value","nameInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses"],"sources":["C:/Users/Dev/Desktop/React/my-app10/src/components/SimpleInput.js"],"sourcesContent":["import { useRef, useState } from \"react\";\nconst SimpleInput = (props) => {\n  // const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  // const [enteredNameIsValid, setenteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n\n  const nameEnteredIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      setFormIsValid(true);\n    } else {\n      setFormIsValid(false);\n    }\n  }, [enteredNameIsValid]);\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n\n    // if (event.target.value.trim() !== \"\") {\n    //   setenteredNameIsValid(true);\n    //   return;\n    // }\n  };\n\n  const nameInputBlurHandler = (event) => {\n    setEnteredNameTouched(true);\n\n    // if (enteredName.trim() === \"\") {\n    //   setenteredNameIsValid(false);\n    //   return;\n    // }\n  };\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    setEnteredNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    // if (enteredName.trim() === \"\") {\n    //   setenteredNameIsValid = false;\n    //   return;\n    // }\n    // setenteredNameIsValid(true);\n\n    console.log(enteredName);\n\n    // const enteredValue = nameInputRef.current.value;\n    // console.log(enteredValue);\n\n    // nameInputRef.current.value = \"\"; // Not the Ideal condition to do we should not manupulate the DOM\n    setEnteredName(\"\");\n    setEnteredNameTouched(false);\n  };\n\n  const nameInputClasses = nameEnteredIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          // ref={nameInputRef}\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n      </div>\n      {nameEnteredIsInvalid && (\n        <p className=\"error-text\">Name must no be Empty</p>\n      )}\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;;;AACA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B;EACA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C,CAF6B,CAG7B;;EACA,MAAM,CAACK,kBAAD,EAAqBC,qBAArB,IAA8CN,QAAQ,CAAC,KAAD,CAA5D;EACA,MAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,KAAD,CAA9C;EAEA,MAAMS,kBAAkB,GAAGN,WAAW,CAACO,IAAZ,OAAuB,EAAlD;EAEA,MAAMC,oBAAoB,GAAG,CAACF,kBAAD,IAAuBJ,kBAApD;EAEAO,SAAS,CAAC,MAAM;IACd,IAAIH,kBAAJ,EAAwB;MACtBD,cAAc,CAAC,IAAD,CAAd;IACD,CAFD,MAEO;MACLA,cAAc,CAAC,KAAD,CAAd;IACD;EACF,CANQ,EAMN,CAACC,kBAAD,CANM,CAAT;;EAQA,MAAMI,sBAAsB,GAAIC,KAAD,IAAW;IACxCV,cAAc,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd,CADwC,CAGxC;IACA;IACA;IACA;EACD,CAPD;;EASA,MAAMC,oBAAoB,GAAIH,KAAD,IAAW;IACtCR,qBAAqB,CAAC,IAAD,CAArB,CADsC,CAGtC;IACA;IACA;IACA;EACD,CAPD;;EASA,MAAMY,qBAAqB,GAAIJ,KAAD,IAAW;IACvCA,KAAK,CAACK,cAAN;IAEAb,qBAAqB,CAAC,IAAD,CAArB;;IAEA,IAAI,CAACG,kBAAL,EAAyB;MACvB;IACD,CAPsC,CASvC;IACA;IACA;IACA;IACA;;;IAEAW,OAAO,CAACC,GAAR,CAAYlB,WAAZ,EAfuC,CAiBvC;IACA;IAEA;;IACAC,cAAc,CAAC,EAAD,CAAd;IACAE,qBAAqB,CAAC,KAAD,CAArB;EACD,CAvBD;;EAyBA,MAAMgB,gBAAgB,GAAGX,oBAAoB,GACzC,sBADyC,GAEzC,cAFJ;EAIA,oBACE;IAAM,QAAQ,EAAEO,qBAAhB;IAAA,wBACE;MAAK,SAAS,EAAEI,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE;QACA,IAAI,EAAC,MAFP;QAGE,EAAE,EAAC,MAHL;QAIE,QAAQ,EAAET,sBAJZ;QAKE,MAAM,EAAEI,oBALV;QAME,KAAK,EAAEd;MANT;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAYGQ,oBAAoB,iBACnB;MAAG,SAAS,EAAC,YAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAbJ,eAeE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAQ,QAAQ,EAAE,CAACJ,WAAnB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAfF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CAvFD;;GAAMN,W;;KAAAA,W;AAyFN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}